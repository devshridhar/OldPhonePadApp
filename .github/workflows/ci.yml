name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request_target:
    types: [opened, synchronize]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0'

      - name: Install dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --no-restore --configuration Release

      - name: Run unit tests
        run: dotnet test --no-restore --verbosity normal --collect:"XPlat Code Coverage"

      - name: Upload Code Coverage
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: $(System.DefaultWorkingDirectory)/TestResults/

  generate-doc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
  
      - name: Install Doxygen
        run: sudo apt-get install -y doxygen
  
      - name: Generate Documentation
        run: doxygen Doxyfile
  
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: src/OldPhonePadApp/docs/html


  create-release:
    if: github.event_name == 'push'
    needs: [ build-test ]
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0'

      - name: Publish Executable
        run: |
          dotnet publish src/OldPhonePadApp/OldPhonePadApp.csproj `
            -c Release `
            -r win-x64 `
            --self-contained true `
            /p:PublishSingleFile=true `
            /p:PublishTrimmed=true `
            -o ./publish

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: "Release for ${{ github.ref_name }}"
          artifacts: ./publish/**
          token: ${{ secrets.GITHUB_TOKEN }}
